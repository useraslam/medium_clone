import React, {useState, useEffect, useContext} from 'react'
import ArticleForm from 'components/ArticleForm'
import useFetch from 'hooks/useFetch'
import { Redirect } from "react-router-dom";
import{ CurrentUserContext} from 'contexts/CurrentUser'

const EditArticle = ({match}) => {
    const slug = match.params.slug
    const apiUrl = `/articles/${slug}`
    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)
    const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl)
    const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl)
    const [currentUserState] = useContext(CurrentUserContext)
    const [initialValue, setInitialValue] = useState(null)


    const onSubmit = article => {
        doUpdateArticle({
            method: 'put',
            data: {
                article
            }
        })
    }
   

    useEffect(() => {
        if(!fetchArticleResponse) {
            return
        }
        setInitialValue({
            title: fetchArticleResponse.article.title,
            description: fetchArticleResponse.article.description,
            body: fetchArticleResponse.article.body,
            tagList: fetchArticleResponse.tagList.join('')
        })

    },[fetchArticleResponse])

    useEffect(() => {
        doFetchArticle()
    },[doFetchArticle])

    useEffect(() => {
       if(!updateArticleResponse) {
           return
       }
       setIsSuccessfullSubmit(true)

    }, [updateArticleResponse, setIsSuccessfullSubmit])

    if(currentUserState.isLoggedIn === null) {
        return null
    }

   if(currentUserState.isLoggedIn === false) {
       return <Redirect to='/' />
   }
   
   if(isSuccessfullSubmit) {
       return <Redirect to={`/articles/${slug}`} />
   }


    return (
        <div>
            <ArticleForm onSubmit={onSubmit} initialValues={initialValues} errors={(updateArticleError && updateArticleError.errors) || {}}/>
        </div>
    )
}

export default EditArticle

