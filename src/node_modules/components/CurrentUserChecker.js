import React, {useEffect, useContext} from 'react'

import UseFetch from 'hooks/useFetch'
import{ CurrentUserContext} from 'contexts/CurrentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {
    const [state, setCurrentUserState] = useContext(CurrentUserContext)
    const [{response}, doFetch] = UseFetch('/user')
    const [token] = useLocalStorage('token')

    useEffect(() => {
        if(!token) {
            setCurrentUserState(state => ({
                ...state,
                isLoggedIn: false
            }))
            return
        }
        doFetch()
        setCurrentUserState(state => ({
            ...state, 
            isLoading: true
        }))
    },[doFetch])

    useEffect(() => {
        if(!response) {
            return
        }
        setCurrentUserState(state => ({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser: response.user
        }))
    },[response])
    
    return (
     children
    )
}

export default CurrentUserChecker
